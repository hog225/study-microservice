server.port: 7002
server.error.include-message: always

spring.data.mongodb:
  host: localhost
  port: 27017
  database: recommendation-db
  auto-index-creation: true


spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings.input:
    destination: recommendations
    group: recommendationsGroup

spring.cloud.stream.bindings.input.consumer:
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.input.consumer:
  autoBindDlq: true
  republishToDlq: true

spring.cloud.stream.kafka.bindings.input.consumer:
  enableDlq: true

spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092

spring.rabbitmq:
  host: 127.0.0.1
  port: 5672
  username: guest
  password: guest

logging:
  level:
    root: INFO
    se.yg: DEBUG
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG # mongo db 문 실행 확인

# Actuator
management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"
# 유레카 서비스가 각 마이크로 서비스를 식별하는 이름
spring.application.name: recommendation

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

ribbon.ServerListRefreshInterval: 5000

ribbon.NFLoadBalancerPingInterval: 5
---

spring:
  config:
    activate:
      on-profile: docker
  data:
    mongodb:
      host: mongodb

spring.rabbitmq.host: rabbitmq
spring.cloud.stream.kafka.binder.brokers: kafka

server.port: 8080
eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/